package org.wcong.algorithm.epi.honors;
/*
* FIND THE FIRST MISSING POSITIVE ENTRY
* BUY AND SELL A STOCK k TIMES
* COMPUTE THE MAXIMUM PRODUCT OF ALL ENTRIES BUT ONE
* COMPUTE THE LONGEST CONTIGUOUS INCREASING SUB ARRAY
* ROTATE AN ARRAY
* IDENTIFY POSITIONS ATTACKED BY ROOKS
* JUSTIFY TEXT
* IMPLEMENT LIST ZIPPING
* COPY A POSTINGS LIST
* COMPUTE THE LONGEST SUBSTRING WITH MATCHING PARENS
* COMPUTE THE MAXIMUM OF A SLIDING WINDOW
* IMPLEMENT A POST ORDER TRAVERSAL WITHOUT RECURSION
* COMPUTE FAIR BONUSES
* SEARCH A SORTED ARRAY OF UNKNOWN LENGTH
* SEARCH IN TWO SORTED ARRAYS
* FIND THE km LARGEST ELEMENTâ€”LARGE n,SMALL k
* FIND AN ELEMENT THAT APPEARS ONLY ONCE
* FIND THE LINE THROUGH THE MOST POINTS
* FIND THE SHORTEST UNIQUE PREFIX
* FIND THE MOST VISITED PAGES IN A WINDOW
* CONVERT A SORTED DOUBLY LINKED LIST INTO A BST
* CONVERT A BST TO A SORTED DOUBLY LINKED LIST
* MERGE TWO BSTS
* THE VIEW FROM ABOVE
* IMPLEMENT REGULAR EXPRESSION MATCHING
* SYNTHESIZE AN EXPRESSION
* COUNT INVERSIONS
* DRAW THE SKYLINE
* MEASURE WITH DEFECTIVE JUGS
* COMPUTE THE MAXIMUM SUB ARRAY SUM IN A CIRCULAR ARRAY
* DETERMINE THE CRITICAL HEIGHT
* FIND THE MAXIMUM 2D SUB ARRAY
* IMPLEMENT HUFFMAN CODING
* TRAPPING WATER
* SEARCH FOR A PAIR-SUM IN AN ABS-SORTED ARRAY
* THE HEAVY HITTER PROBLEM
* FIND THE LONGEST SUB ARRAY WHOSE SUM < k
* ROAD NETWORK
* TEST IF ARBITRAGE IS POSSIBLE
* **/
